package br.com.body.jdbc;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import br.com.body.entidade.Aluno;
import br.com.body.entidade.AlunoTurma;
import br.com.body.entidade.Turma;

/**
 * Classe responsável pelos métodos e conexão com o banco de dados.
 * 
 * @author Thaís
 *
 */
public class AlunoTurmaDAO {
	
	private Connection conexao = Conexao.getConnection();
	
	/**
	 * Método que insere uma dado na tabela aluno_turma.
	 */
	public void cadastraAlunoTurma(Aluno aluno, Turma turma) {
		
		String sql = "INSERT INTO aluno_turma (cpf_aluno, cod_turma) VALUES (?,?)";
		
		try {
			PreparedStatement preparador = conexao.prepareStatement(sql);
			
			preparador.setString(1, aluno.getCpf());
			preparador.setString(2, turma.getCodigo());
			
			preparador.execute();
			preparador.close();
			
		} catch (SQLException e) {
			System.out.println("Erro - " + e.getMessage());
		}
		
	}
	
	/**
	 * Método que altera uma dado na tabela aluno_turma.
	 */
	public void alteraCadastroAlunoTurma(AlunoTurma alunoTurma) {
		
		String sql = "UPDATE aluno_turma SET  cod_turma = ? WHERE cpf_aluno = ?";
		
		try {
			PreparedStatement preparador = conexao.prepareStatement(sql);
			
			preparador.setString(1, alunoTurma.getCodTurma());
			preparador.setString(2, alunoTurma.getCpfAluno());
			
			preparador.execute();
			preparador.close();
			
		} catch (SQLException e) {
			System.out.println("Erro - " + e.getMessage());
		}
		
	}
	
	/**
	 * Método que deleta uma dado na tabela aluno_turma.
	 */
	public void deletaCadastroAlunoTurma(Aluno aluno) {
		
		String sql = "DELETE FROM aluno_turma WHERE cpf_aluno = ?";
		
		try {
			PreparedStatement preparador = conexao.prepareStatement(sql);
			
			preparador.setString(1, aluno.getCpf());
			
			preparador.execute();
			preparador.close();
			
		} catch (SQLException e) {
			System.out.println("Erro - " + e.getMessage());
		}
		
	}
	
	/**
	 * Método que retorna uma lista com os dados da tabela aluno_turma.
	 */
	public List<Aluno> buscaListaAlunos(Aluno aluno) {
		
		String sql = "SELECT * FROM aluno";
		List<Aluno> listaAlunos = new ArrayList<>();
		
		try {
			PreparedStatement preparador = conexao.prepareStatement(sql);
			ResultSet resultados = preparador.executeQuery();
			
			while(resultados.next()) {
				Aluno alu = new Aluno();
				alu.setNome(resultados.getString("nome"));
				alu.setCpf(resultados.getString("cpf"));
				alu.setEmail(resultados.getString("email"));
				alu.setMatricula(resultados.getString("matricula"));
				alu.setDataMatricula(resultados.getDate("data_matricula"));
				
				listaAlunos.add(alu);
				
			}
		} catch (SQLException e) {
			System.out.println("Erro - " + e.getMessage());
		}
		
		return listaAlunos;
		
	}

}
